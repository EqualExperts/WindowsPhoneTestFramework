// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.7.1.0
//      SpecFlow Generator Version:1.7.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ExampleApp.Spec
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.7.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MainPage")]
    public partial class MainPageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MainPage.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MainPage", "In order to use ExampleApp\r\nAs a WP7 user\r\nI want to be read the main page", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Main Page loads after a few seconds")]
        public virtual void MainPageLoadsAfterAFewSeconds()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Main Page loads after a few seconds", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("my app is clean installed and running");
#line 8
 testRunner.Then("take a picture");
#line 9
 testRunner.Then("I may see the text \"Waiting...\"");
#line 10
 testRunner.Then("I wait for the text \"Go!\" to appear");
#line 11
 testRunner.Then("take a picture");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Fast Application Switching works on Main Page")]
        public virtual void FastApplicationSwitchingWorksOnMainPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fast Application Switching works on Main Page", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.Given("my app is clean installed and running");
#line 15
 testRunner.Then("take a picture");
#line 16
 testRunner.Then("I may see the text \"Waiting...\"");
#line 17
 testRunner.Then("I wait for the text \"Go!\" to appear");
#line 18
 testRunner.Then("take a picture");
#line 19
 testRunner.Then("I go home");
#line 20
 testRunner.Then("I wait 1 seconds");
#line 21
 testRunner.Then("I press the back button for 2 seconds");
#line 22
 testRunner.Then("I wait 1 seconds");
#line 23
 testRunner.Then("I flick \"LeftToRight\"");
#line 24
 testRunner.Then("I wait 1 seconds");
#line 25
 testRunner.Then("I tap on the middle of the screen");
#line 26
 testRunner.Then("I wait 1 seconds");
#line 27
 testRunner.Then("take a picture");
#line 28
 testRunner.Then("my app is running");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Main Page provides a Go button that provides access to the ChildPivotPage")]
        public virtual void MainPageProvidesAGoButtonThatProvidesAccessToTheChildPivotPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Main Page provides a Go button that provides access to the ChildPivotPage", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("my app is clean installed and running");
#line 32
 testRunner.Then("take a picture");
#line 33
 testRunner.Then("I may see the text \"Waiting...\"");
#line 34
 testRunner.Then("I wait for the text \"Go!\" to appear");
#line 35
 testRunner.Then("take a picture");
#line 36
 testRunner.Then("I press the control \"Go!\"");
#line 37
 testRunner.Then("take a picture");
#line 38
 testRunner.Then("I wait for the text \"item1\" to appear");
#line 39
 testRunner.Then("take a picture");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Back button works on Main Page")]
        public virtual void BackButtonWorksOnMainPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Back button works on Main Page", ((string[])(null)));
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given("my app is clean installed and running");
#line 43
 testRunner.Then("take a picture");
#line 44
 testRunner.Then("I may see the text \"Waiting...\"");
#line 45
 testRunner.Then("I wait for the text \"Go!\" to appear");
#line 46
 testRunner.Then("take a picture");
#line 47
 testRunner.Then("I go back");
#line 48
 testRunner.Then("I wait 2 seconds");
#line 49
 testRunner.Then("my app is not running");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#endregion
