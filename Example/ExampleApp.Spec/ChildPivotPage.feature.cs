// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.7.1.0
//      SpecFlow Generator Version:1.7.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ExampleApp.Spec
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.7.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ChildPage")]
    public partial class ChildPageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ChildPivotPage.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ChildPage", "  In order to use ExampleApp\r\n  As a WP7 user\r\n  I want to be enter text in the f" +
                    "ields on the child pivot page", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("my app is clean installed and running");
#line 8
    testRunner.Then("I may see the text \"Waiting...\"");
#line 9
    testRunner.Then("I wait for the text \"Go!\" to appear");
#line 10
    testRunner.Then("I press the control \"Go!\"");
#line 11
    testRunner.Then("I wait for the text \"item1\" to appear");
#line 12
    testRunner.And("take a picture");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pivot Page fields are empty at start")]
        public virtual void PivotPageFieldsAreEmptyAtStart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pivot Page fields are empty at start", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
    testRunner.Then("I see the control \"TextBoxInput\" contains \"\"");
#line 16
    testRunner.And("I see the control \"TextBoxOutput\" contains \"\"");
#line 17
    testRunner.And("take a picture");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The Pivot Page output field reverses what I type in input")]
        public virtual void ThePivotPageOutputFieldReversesWhatITypeInInput()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The Pivot Page output field reverses what I type in input", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
    testRunner.Then("I see the control \"TextBoxInput\" contains \"\"");
#line 21
    testRunner.And("I see the control \"TextBoxOutput\" contains \"\"");
#line 22
    testRunner.And("take a picture");
#line 23
    testRunner.Then("I enter \"Hello World\" into the control \"TextBoxInput\"");
#line 24
    testRunner.Then("I see the control \"TextBoxInput\" contains \"Hello World\"");
#line 25
    testRunner.And("I see the control \"TextBoxOutput\" contains \"dlroW olleH\"");
#line 26
    testRunner.Then("take a picture");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An example broken test")]
        public virtual void AnExampleBrokenTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An example broken test", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
    testRunner.Then("I see the control \"TextBoxInput\" contains \"\"");
#line 30
    testRunner.And("I see the control \"TextBoxOutput\" contains \"\"");
#line 31
    testRunner.And("take a picture");
#line 32
    testRunner.Then("I press the control \"BreakThingsCheckBox\"");
#line 33
    testRunner.And("take a picture");
#line 34
    testRunner.Then("I enter \"Hello World\" into the control \"TextBoxInput\"");
#line 35
    testRunner.Then("I see the control \"TextBoxInput\" contains \"Hello World\"");
#line 36
    testRunner.Then("take a picture");
#line 37
    testRunner.And("I see the control \"TextBoxOutput\" contains \"dlroW olleH\"");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The Pivot Page has a Pivot which responds to flicks")]
        public virtual void ThePivotPageHasAPivotWhichRespondsToFlicks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The Pivot Page has a Pivot which responds to flicks", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
    testRunner.Then("I see the control \"item1\" is left of the control \"item2\"");
#line 41
    testRunner.And("I see the control \"item2\" is left of the control \"item3\"");
#line 42
    testRunner.And("I see \"Input\"");
#line 45
    testRunner.Then("I flick \"RightToLeft\"");
#line 46
    testRunner.And("I wait 2 seconds");
#line 47
    testRunner.And("take a picture");
#line 48
    testRunner.Then("I see the control \"item2\" is left of the control \"item3\"");
#line 49
    testRunner.And("I see the control \"item3\" is left of the control \"item1\"");
#line 51
    testRunner.And("I see the text \"You are on pivot 2\"");
#line 53
    testRunner.Then("I flick \"RightToLeft\"");
#line 54
    testRunner.And("I wait 2 seconds");
#line 55
    testRunner.And("take a picture");
#line 56
    testRunner.Then("I see the control \"item3\" is left of the control \"item1\"");
#line 57
    testRunner.And("I see the control \"item1\" is left of the control \"item2\"");
#line 60
    testRunner.And("I see the text \"You are on pivot 3\"");
#line 61
    testRunner.Then("I flick \"LeftToRight\"");
#line 62
    testRunner.And("I wait 2 seconds");
#line 63
    testRunner.And("take a picture");
#line 64
    testRunner.Then("I see the control \"item2\" is left of the control \"item3\"");
#line 65
    testRunner.And("I see the control \"item3\" is left of the control \"item1\"");
#line 67
    testRunner.And("I see the text \"You are on pivot 2\"");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Back button works on Pivot Page")]
        public virtual void BackButtonWorksOnPivotPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Back button works on Pivot Page", ((string[])(null)));
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
    testRunner.Then("I go back");
#line 72
 testRunner.And("I wait 2 seconds");
#line 73
 testRunner.Then("take a picture");
#line 74
 testRunner.And("I see the text \"page name\"");
#line 75
    testRunner.Then("I go back");
#line 76
 testRunner.And("I wait 2 seconds");
#line 77
 testRunner.Then("my app is not running");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#endregion
